
1. Maratonando Filmes
Uma amiga da Alex deu uma coleção de filmes para ela de presente, e Alex está animada para assistir todos eles o mais rápido possível. A duração dos filmes é dada em um vetor duracoes[n], onde n é o número do filme, e cada filme dura entre 1.01 e 3.00 horas (até duas casas decimais). Alex quer gastar no máximo 3.00 horas assistindo filmes por dia, mas também quer assistir a coleção completa no mínimo número de dias possível. Alex nunca para de assistir um filme na metade. Isso é, se Alex escolheu um filme, Alex assiste o filme por completo no mesmo dia.

Ache o número mínimo de dias necessário para assistir a coleção de filme completa.

Exemplo

n = 5 

duracoes = [1.90, 1.04, 1.25, 2.5, 1.75]


Considerando um passo a passo de 1 em 1, Alex consegue assistir os filmes em um mínimo de 3 dias:

Dia 1: primeiro e segundo filmes: 1.90 + 1.04 = 2.94 ≤  3.00
Dia 2: quarto filme: 2.5 ≤  3.00
Dia 3: terceiro e quinto filmes: 1.25 + 1.75 = 3.00 ≤  3.00
 

Descrição da Função

Complete a função acharMinimoDeDias no editor abaixo.

acharMinimoDeDias tem o seguinte parâmetro:

float duracoes[n]: a duração de cada filme.
 
Retorna:

int: o mínimo número de dias necessário para assistir todos os filmes. 

Restrições

1 ≤ n ≤ 1000

1.01 ≤ duracoes[i] ≤ 3.0

Formato de entrada para Teste Personalizado
A primeira linha contém um inteiro, n, o número de elementos em duracoes.

Cada linha i das n linhas seguintes (onde 0 ≤ i < n) contém um float que descreve duracoes[i].
 
Amostra de teste 0
Entrada

STDIN    Função
-----    ------
5     →  duracoes[] tamanho n = 5
1.01  →  duracoes = [1.01, 1.01, 1.01, 1.4, 2.4]
1.01
1.01
1.4
2.4
Saída

3
Explicação

Alex consegue assistir todos os filmes em 3 dias da seguinte maneira:

Dia 1: primeiro e segundo filmes: 1.01 + 1.01 = 2.02 ≤ 3.00
Dia 2: terceiro e quarto filmes: 1.01 + 1.4 = 2.41 ≤ 3.00
Dia 3: quinto filme: 2.4 ≤  3.00
 
Amostra de teste 1
Language
JavaScript (Node.js)
Autocomplete Disabled

More
126272829303132333435363738
'use strict';

const fs = require('fs');

process.stdin.resume();
process.stdin.setEncoding('utf-8');

let inputString = '';
let currentLine = 0;

process.stdin.on('data', function(inputStdin) {
    inputString += inputStdin;
});

process.stdin.on('end', function() {
    inputString = inputString.split('\n');

    main();
});

function readLine() {
    return inputString[currentLine++];
}

